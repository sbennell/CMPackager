<ApplicationDef>
	<!-- Application - Sets the information shown in SCCM and in Software Center for the Application -->
	<Application>
		<!-- Name (Required) - [String] The Name of the Application (version number is appended)-->
		<Name></Name>
		<!-- Description - [String] Software Center Description -->
		<Description></Description>
		<!-- Description - [String] Software Center Name -->
		<LocalizedName></LocalizedName>
		<!-- AdminDescription - [String] Application Administrative Description -->
		<AdminDescription></AdminDescription>
		<!-- Publisher - [String] Application Publisher -->
		<Publisher></Publisher>
		<!-- AutoInstall - [Boolean] Allow Install In Task Sequence -->
		<AutoInstall></AutoInstall>
		<!-- UserDocumentation - [String] Hyperlink, in URI format for information for Software Center -->
		<UserDocumentation></UserDocumentation>
		<!-- OptionalReference - [String] Reference Link in Admin Console -->
		<OptionalReference></OptionalReference>
		<!-- LinkText - [String] Specifies a description that appears in the Application Catalog with a hyperlink to additional information or documentation for the application. -->
		<LinkText></LinkText>
		<!-- PrivacyUrl - [String] Hyperlink, in URI format, to privacy information about the application. -->
		<PrivacyUrl></PrivacyUrl>
		<!-- Owner - [String] Owner for Application -->
		<Owner></Owner>
		<!-- SupportContact - [String] Support Contact for Application -->
		<SupportContact></SupportContact>
		<!-- Icon - [String] Icon File Name in Icon Repository (Repository is set in the Preferences File) -->
		<Icon></Icon>
		<!-- AdminCategories - [String] Comma Delimited Categories in the Console -->
		<AdminCategories></AdminCategories>
		<!-- UserCategories - [String] Comma Delimited Categories for Software Center -->
		<UserCategories></UserCategories>
		<!-- Keywords - [String] Comma Delimited Keywords for Searching in Software Center -->
		<Keywords></Keywords>
		<!-- FeaturedApplication - [Boolean] Display as a Featured Application and Hightlight in the Company Portal -->
		<FeaturedApplication></FeaturedApplication>
		<!-- DisplaySupersedence - [Boolean] Allows Users to See Deployments Superceded Appplications in Software Center -->
		<DisplaySupersedence></DisplaySupersedence>
		<!-- FolderPath - [String] The folder path in ConfigMgr where the Application should be created. Default location on the "Software Libary" node is the root under "Overview -> Application Management -> Applications". -->
		<FolderPath></FolderPath>
	</Application>
	<!-- Downloads - Sets the Definition for the downloads required for the Application -->
	<Downloads>
		<Download DeploymentType="MatchThisToDeplpoymentTypeName">
			<!-- PrefetchScript - [String(PowerShell Script Block)] Used to fetch the $URL for download, or download the software itself if the software is behind a login screen etc. -->
			<PrefetchScript></PrefetchScript>
			<!--URL - [String] The URL the Installer will be downloaded from, you can set the $URL variable to fill in this value dynamically -->
			<URL></URL>
			<!-- DownloadFileName - [String] The name of the file after it has been downloaded -->
			<DownloadFileName></DownloadFileName>
			<!-- DownloadVersionCheck - [String(PowerShell Script Block)] PowerShell Scripting Block that can be used to determine the version, you should set the $Version and optionally the $FullVersion in this script
			the Application will be named using this $version, there are a few built in functions to help ease this process:
				1. Get-ExtensionAttribute - Determines the Extension Attributes of a file (values that are found in the windows properties menu of a file)
				2. Get-MSIInfo - Used to get information from an MSI File (Things like ProductCode, ProductVersion, etc)
			Important Variables:
				$Version - The Version of the Application should be set here, it is used to name the Application
				$FullVersion - The FullVersion of the Application (Usually used for Detection Methods) can optionally be set here
			-->
			<DownloadVersionCheck></DownloadVersionCheck>
			<!-- Version - [String(Empty)] Placeholder, will be filled with the $Version set above-->
			<Version></Version>
			<!-- FullVersion - [String(Empty)] Placeholder, optional, Can be set with the $FullVersion in the DownloadVersionCheck Scripting Block -->
			<FullVersion></FullVersion>
			<!-- AppRepoFolder - [String] When making multiple deployment Types, this can be used to create separate folders for each deployment type (like x64 and x86 folders)-->
			<AppRepoFolder></AppRepoFolder>
			<!-- ExtraCopyFunctions - [String(PowerShell Script Block)] PowerShell Script Block used to copy extra files and folders to the repository, things like MSTs etc. can be saved in the ExtraFiles folder and copied here. 
			Important Variables:
			$DestinationPath - The Path to the Repository
			-->
			<ExtraCopyFunctions>Custom Script to Copy Extra Files/Folders to Content Location, or post processing of downloaded files, runs after Files are copied to Content Location</ExtraCopyFunctions>
			<!-- RequireHigherVersion - [Boolean] Require a version number to be higher than currently in CM to be "new" -->
			<RequireHigherVersion></RequireHigherVersion>
		</Download>
		<!-- Below are some of the combinations that can be used for different types of downloads and deployment types, notice that each download has a deployment type that matches it-->
		<Download DeploymentType="MSI">
			<URL></URL>
			<DownloadFileName></DownloadFileName>
			<DownloadVersionCheck></DownloadVersionCheck>
			<Version></Version>
			<FullVersion></FullVersion>
			<AppRepoFolder></AppRepoFolder>
			<ExtraCopyFunctions></ExtraCopyFunctions>
		</Download>
		<Download DeploymentType="MSIwithCustomInstall">
			<URL></URL>
			<DownloadFileName></DownloadFileName>
			<DownloadVersionCheck></DownloadVersionCheck>
			<Version></Version>
			<FullVersion></FullVersion>
			<AppRepoFolder></AppRepoFolder>
			<ExtraCopyFunctions></ExtraCopyFunctions>
		</Download>
		<Download DeploymentType="MSIwithCustomDetectionScript">
			<URL></URL>
			<DownloadFileName></DownloadFileName>
			<DownloadVersionCheck></DownloadVersionCheck>
			<Version></Version>
			<FullVersion></FullVersion>
			<AppRepoFolder></AppRepoFolder>
			<ExtraCopyFunctions></ExtraCopyFunctions>
		</Download>
		<Download DeploymentType="Script">
			<URL></URL>
			<DownloadFileName></DownloadFileName>
			<DownloadVersionCheck></DownloadVersionCheck>
			<Version></Version>
			<FullVersion></FullVersion>
			<AppRepoFolder></AppRepoFolder>
			<ExtraCopyFunctions></ExtraCopyFunctions>
		</Download>
	</Downloads>
	<DeploymentTypes>
		<DeploymentType Name="MatchThisToDeplpoymentTypeName">
			<!-- DeploymentTypeName - The Name of the deploymentType in SCCM -->
			<DeploymentTypeName></DeploymentTypeName>
			<!-- InstallationType - The Type of Installation in SCCM for this deployment Type -->
			<InstallationType>[MSI/Script]</InstallationType>
			<!-- Comments - Administrative Comments in Deployment Type -->
			<Comments></Comments>
			<!-- CacheContent - [Boolean]Cache Content on Client -->
			<CacheContent></CacheContent>
			<!-- BranchCache - [Boolean]Enable BranchCache -->
			<BranchCache></BranchCache>
			<!-- ContentFallback - [Boolean]Enable Content Fallback -->
			<ContentFallback>[Boolean]Enable Content Fallback</ContentFallback>
			<!-- OnSlowNetwork - [string]Slow Network Mode -->
			<OnSlowNetwork> [DoNothing/Download/DownloadContentForStreaming]</OnSlowNetwork>
			<!-- InstallProgram -[String]InstallationProgram command line -->
			<InstallProgram></InstallProgram>
			<!-- InstallationMSI - [String]MSI File Name -->
			<InstallationMSI></InstallationMSI>
			<!-- UninstallCmd - [String] Uninstallation Command Line -->
			<UninstallCmd></UninstallCmd>
			<!-- RepairCmd - [String] Repair Command Line -->
			<RepairCmd></RepairCmd>
			<!-- Force32bit - [Boolean] Force 32 bit install -->
			<Force32bit></Force32bit>
			<!-- InstallationBehaviorType - [String] Installation behavior -->
			<InstallationBehaviorType>[InstallForSystem/InstallForUser/InstallForSystemIfResourceIsDeviceOtherwiseInstallForUser]</InstallationBehaviorType>
			<!-- LogonReqType - [String] Logon requirement Type -->
			<LogonReqType>[OnlyWhenNoUserLoggedOn/OnlyWhenUserLoggedOn/WhereOrNotUserLoggedOn/WhetherOrNotUserLoggedOn]</LogonReqType>
			<!-- UninstallContentLocation - [string] Source for content to use with UninstallCmd if UninstallOption set to "Different" -->
			<UninstallContentLocation></UninstallContentLocation>
			<!-- UninstallOption - [string] Specify what content to use with UninstallCmd -->
			<UninstallOption>[SameAsInstall/NoneRequired/Different]</UninstallOption>
			<!-- UserInteractionMode - [String] Visibility -->
			<UserInteractionMode>[Hidden/Normal/Minimized/Maximized]</UserInteractionMode>
			<!-- ReqUserInteraction - [Boolean] Allow User Interaction -->
			<ReqUserInteraction></ReqUserInteraction>
			<!-- EstRuntimeMins - [Int] Estimated Run Time -->
			<EstRuntimeMins>5</EstRuntimeMins>
			<!-- MaxRuntimeMins - [int] Maximum Run Time -->
			<MaxRuntimeMins>60</MaxRuntimeMins>
			<!-- RebootBehavior - [String]Reboot after Install -->
			<RebootBehavior>[BasedOnExitCode/ForceLogOff/ForceReboot/NoAction/ProgramReboot]</RebootBehavior>
			<!-- DetectionMethodType - [String] Type Of DetectionMethod -->
			<DetectionMethodType>[MSI/CustomScript/Custom]</DetectionMethodType>
			<!-- ScriptLanguage - [String] Language for Detection Method -->
			<ScriptLanguage>[PowerShell/VBScript]</ScriptLanguage>
			<!-- DetectionMethod - [String] Content of Script Detection Method Script Block -->
			<DetectionMethod></DetectionMethod>
			<!-- The following are all of the possible detection method clauses if you choose a custom detection method-->
			<CustomDetectionMethods>
				<DetectionClause>
					<DetectionClauseType>[Directory/File]</DetectionClauseType>
					<Name>(Required)</Name>
					<Path>(Required)</Path>
					<PropertyType>[Directory:{DateCreated/DateModified}] [File:{DateCreated/DateModified/Version/Size}]</PropertyType>
					<ExpectedValue></ExpectedValue>
					<ExpressionOperator>[IsEquals/NotEquals/GreaterThan/GreaterEquals/LessThan/LessEquals/Between/OneOf/NoneOf]</ExpressionOperator>
					<Value></Value>
					<Is64Bit></Is64Bit>
				</DetectionClause>
				<!-- Multiple Detection Clauses can be specified under CustomDetectionMethods, Specifiy the Connector to use between clauses with the DETECTIONCLAUSEEXPRESSION (below) -->
				<DetectionClause>
					<DetectionClauseType>[Directory/File]</DetectionClauseType>
					<Name>(Required)</Name>
					<Path>(Required)</Path>
					<Existence></Existence>
					<Is64Bit></Is64Bit>
				</DetectionClause>
				<DetectionClause>
					<DetectionClauseType>[RegistryKey/RegistryKeyValue]</DetectionClauseType>
					<Hive>(Required)</Hive>
					<KeyName>(Required)</KeyName>
					<Existence></Existence>
					<Is64Bit></Is64Bit>
					<PropertyType>(Required - Only for RegKeyValue)</PropertyType>
					<ValueName>(Required - Only for RegKeyValue)</ValueName>
				</DetectionClause>
				<DetectionClause>
					<DetectionClauseType>[RegistryKeyValue]</DetectionClauseType>
					<ExpressionOperator>(Required)</ExpressionOperator>
					<Hive>(Required)</Hive>
					<KeyName>(Required)</KeyName>
					<PropertyType>(Required)</PropertyType>
					<ValueName>(Required)</ValueName>
					<ExpectedValue>(Required)</ExpectedValue>
					<Is64Bit></Is64Bit>
					<Value></Value>
				</DetectionClause>
				<DetectionClause>
					<DetectionClauseType>[WindowsInstaller]</DetectionClauseType>
					<ProductCode>(Required)</ProductCode>
					<Existence>(only needed if providing Product code)</Existence>
					<ExpressionOperator>(Required for ExpectedValue)</ExpressionOperator>
					<ExpectedValue>(Required for ExpressionOperator)</ExpectedValue>
					<PropertyType>[Optional Only if ExpectedValue]</PropertyType>
					<Value>[Optional only if ExpectedValue]</Value>
				</DetectionClause>
				<DetectionClauseExpression>
					<DetectionClauseConnector>
						<!-- The connector clause specifies the index of the detection method above to apply the clasue to. For a detection method with 2 clauses, you would choose
						1 as the connector clause to add the Connector between clause0 and clause1 -->
						<ConnectorClause>(required if using mulitple detection clauses)[$index of the detection clause starting at 0]</ConnectorClause>
						<ConnectorClauseConnector>(Required)[OR/AND]</ConnectorClauseConnector>
					</DetectionClauseConnector>
					<DetectionClauseGrouping><!--Grouping is unavailable at this time--></DetectionClauseGrouping>
				</DetectionClauseExpression>
			</CustomDetectionMethods>
			<!-- Requirements (LEGACY) - Requirements can be added to all applications, you should set up an application that the requirements can be copied from in the preferences file-->
			<Requirements>
			<!-- RuleName - [String] You can assign requirements to an application by using the rule name on the existing template application -->
				<RuleName></RuleName>
			</Requirements>
			<RequirementsRules>
				<RequirementsRule>
					<!-- RequirementsRuleType - [Existential/OperatingSystem/Value] - The type of Requirements rule for this application -->
					<RequirementsRuleType></RequirementsRuleType>
					<!-- RequirementsRuleOperator - The Requirements Rule Operator, operators like OneOf will seperate values by "," -->
					<RequirementsRuleOperator></RequirementsRuleOperator>
					<!--RequirementsRuleValue - The value/s for the requirements rule, this includes the -->
					<RequirementsRuleValue>
						<RuleValue></RuleValue>
						<RuleValue></RuleValue>
						<RuleValue></RuleValue>
					</RequirementsRuleValue>
					<RequirementsRuleValue2>
						<RuleValue></RuleValue>
						<RuleValue></RuleValue>
						<RuleValue></RuleValue>
					</RequirementsRuleValue2>
					<RequirementsRuleGlobalCondition></RequirementsRuleGlobalCondition>
				</RequirementsRule>
			</RequirementsRules>
			<InstallBehavior>
			<!--InstallBehavior - Add Entries to the "Install Behavior" Tab in the Deployment Type. SCCM will check if these applications are running before starting the install process. NOTE: A single "Install Behavior" Entry must be defined in the "Requirements Template" Application before this process will work-->
				<InstallBehaviorProcess DisplayName="[Application Display Name]">
				<!--InstallBehaviorExe - The executable that SCCM should check if running before beginning the install process1`-->
					<InstallBehaviorExe>[Application Executable Name]</InstallBehaviorExe>
				</InstallBehaviorProcess>
			</InstallBehavior>
			<!-- Add Dependencies to a Deployment Type -->
			<Dependencies>
				<!-- Add Entries to the "Dependency Group" to create a new Dependency Group-->
				<DependencyGroup GroupName="Dependency1">
					<!-- Each "DependencyGroup" Can have multiple applications defined-->
					<DependencyGroupApp AppName="(Required)[SCCM Application Name]">
						<DependencyDepType>[Optional - Not specifying this will add all Deployment types]</DependencyDepType>
						<DependencyAutoInstall>(Required)[True/False]</DependencyAutoInstall>
					</DependencyGroupApp>
				</DependencyGroup>
			</Dependencies>
		</DeploymentType>
		<!-- Below are some of the possible deploymentTypes based on the Type of Install, These also show which fields are required for each type of deployment, 
		anything not required can be left off and they should use the defaults in SCCM -->
		<DeploymentType Name="MSI">
			<DeploymentTypeName>(Required)</DeploymentTypeName>
			<InstallationType>(Required)[MSI]</InstallationType>
			<Comments></Comments>
			<CacheContent></CacheContent>
			<BranchCache></BranchCache>
			<ContentFallback></ContentFallback>
			<OnSlowNetwork>[DoNothing/Download/DownloadContentForStreaming]</OnSlowNetwork>
			<InstallProgram></InstallProgram>
			<InstallationMSI>(Required)</InstallationMSI>
			<UninstallCmd></UninstallCmd>
			<Force32bit></Force32bit>
			<InstallationBehaviorType>[InstallForSystem/InstallForUser/InstallForSystemIfResourceIsDeviceOtherwiseInstallForUser]</InstallationBehaviorType>
			<LogonReqType>[OnlyWhenNoUserLoggedOn/OnlyWhenUserLoggedOn/WhereOrNotUserLoggedOn/WhetherOrNotUserLoggedOn]</LogonReqType>
			<UninstallContentLocation></UninstallContentLocation>
			<UninstallOption>[SameAsInstall/NoneRequired/Different]</UninstallOption>
			<UserInteractionMode>[Hidden/Normal/Minimized/Maximized]</UserInteractionMode>
			<ReqUserInteraction></ReqUserInteraction>
			<EstRuntimeMins>5</EstRuntimeMins>
			<MaxRuntimeMins>60</MaxRuntimeMins>
			<RebootBehavior>[BasedOnExitCode/ForceLogOff/ForceReboot/NoAction/ProgramReboot]</RebootBehavior>
			<DetectionMethodType>(Required)[MSI]</DetectionMethodType>
			<ScriptLanguage>[String] Language for Detection Method [PowerShell/VBScript]</ScriptLanguage>
			<ScriptDetection32Bit></ScriptDetection32Bit>
			<DetectionMethod>[String] Content of Script Detection Method</DetectionMethod>
		</DeploymentType>
		<DeploymentType Name="MSIwithCustomInstall">
			<DeploymentTypeName>(Required)</DeploymentTypeName>
			<InstallationType>(Required)[MSI]</InstallationType>
			<Comments></Comments>
			<CacheContent></CacheContent>
			<BranchCache></BranchCache>
			<ContentFallback></ContentFallback>
			<OnSlowNetwork>[DoNothing/Download/DownloadContentForStreaming]</OnSlowNetwork>
			<InstallProgram>(Required)</InstallProgram>
			<InstallationMSI>(Required)</InstallationMSI>
			<UninstallCmd></UninstallCmd>
			<Force32bit></Force32bit>
			<InstallationBehaviorType>[InstallForSystem/InstallForUser/InstallForSystemIfResourceIsDeviceOtherwiseInstallForUser]</InstallationBehaviorType>
			<LogonReqType>[OnlyWhenNoUserLoggedOn/OnlyWhenUserLoggedOn/WhereOrNotUserLoggedOn/WhetherOrNotUserLoggedOn]</LogonReqType>
			<UninstallContentLocation></UninstallContentLocation>
			<UninstallOption>[SameAsInstall/NoneRequired/Different]</UninstallOption>
			<UserInteractionMode>[Hidden/Normal/Minimized/Maximized]</UserInteractionMode>
			<ReqUserInteraction></ReqUserInteraction>
			<EstRuntimeMins>5</EstRuntimeMins>
			<MaxRuntimeMins>60</MaxRuntimeMins>
			<RebootBehavior>[BasedOnExitCode/ForceLogOff/ForceReboot/NoAction/ProgramReboot]</RebootBehavior>
			<DetectionMethodType>(Required)[MSI]</DetectionMethodType>
		</DeploymentType>
		<DeploymentType Name="MSIwithCustomDetectionScript">
			<DeploymentTypeName>(Required)</DeploymentTypeName>
			<InstallationType>(Required)[MSI]</InstallationType>
			<Comments></Comments>
			<CacheContent></CacheContent>
			<BranchCache></BranchCache>
			<ContentFallback></ContentFallback>
			<OnSlowNetwork>[DoNothing/Download/DownloadContentForStreaming]</OnSlowNetwork>
			<InstallProgram></InstallProgram>
			<InstallationMSI>(Required)</InstallationMSI>
			<UninstallCmd></UninstallCmd>
			<Force32bit></Force32bit>
			<InstallationBehaviorType>[InstallForSystem/InstallForUser/InstallForSystemIfResourceIsDeviceOtherwiseInstallForUser]</InstallationBehaviorType>
			<LogonReqType>[OnlyWhenNoUserLoggedOn/OnlyWhenUserLoggedOn/WhereOrNotUserLoggedOn/WhetherOrNotUserLoggedOn]</LogonReqType>
			<UninstallContentLocation></UninstallContentLocation>
			<UninstallOption>[SameAsInstall/NoneRequired/Different]</UninstallOption>
			<UserInteractionMode>[Hidden/Normal/Minimized/Maximized]</UserInteractionMode>
			<ReqUserInteraction></ReqUserInteraction>
			<EstRuntimeMins>5</EstRuntimeMins>
			<MaxRuntimeMins>60</MaxRuntimeMins>
			<RebootBehavior>[BasedOnExitCode/ForceLogOff/ForceReboot/NoAction/ProgramReboot]</RebootBehavior>
			<DetectionMethodType>(Required)[CustomScript]</DetectionMethodType>
			<ScriptLanguage>(Required)[PowerShell/VBScript]</ScriptLanguage>
			<ScriptDetection32Bit></ScriptDetection32Bit>
			<DetectionMethod>(Required)</DetectionMethod>
		</DeploymentType>
		<DeploymentType Name="Script">
			<DeploymentTypeName>(Required)</DeploymentTypeName>
			<InstallationType>(Required)[Script]</InstallationType>
			<Comments></Comments>
			<CacheContent></CacheContent>
			<BranchCache></BranchCache>
			<ContentFallback></ContentFallback>
			<OnSlowNetwork>[DoNothing/Download/DownloadContentForStreaming]</OnSlowNetwork>
			<InstallProgram></InstallProgram>
			<InstallationMSI>(Required)</InstallationMSI>
			<UninstallCmd></UninstallCmd>
			<Force32bit></Force32bit>
			<InstallationBehaviorType>[InstallForSystem/InstallForUser/InstallForSystemIfResourceIsDeviceOtherwiseInstallForUser]</InstallationBehaviorType>
			<LogonReqType>[OnlyWhenNoUserLoggedOn/OnlyWhenUserLoggedOn/WhereOrNotUserLoggedOn/WhetherOrNotUserLoggedOn]</LogonReqType>
			<UninstallContentLocation></UninstallContentLocation>
			<UninstallOption>[SameAsInstall/NoneRequired/Different]</UninstallOption>
			<UserInteractionMode>[Hidden/Normal/Minimized/Maximized]</UserInteractionMode>
			<ReqUserInteraction></ReqUserInteraction>
			<EstRuntimeMins>5</EstRuntimeMins>
			<MaxRuntimeMins>60</MaxRuntimeMins>
			<RebootBehavior>[BasedOnExitCode/ForceLogOff/ForceReboot/NoAction/ProgramReboot]</RebootBehavior>
			<DetectionMethodType>(Required)[CustomScript]</DetectionMethodType>
			<ScriptLanguage>[String] Language for Detection Method [PowerShell/VBScript]</ScriptLanguage>
			<ScriptDetection32Bit></ScriptDetection32Bit>
			<DetectionMethod>[String] Content of Script Detection Method</DetectionMethod>
		</DeploymentType>
	</DeploymentTypes>
	<!-- You can optionally Distribute the content to a Group of DPs here -->
	<Distribution>
		<!-- DistributeContent - [Boolean] Switch for distributing content for this application -->
		<DistributeContent></DistributeContent>
		<!-- DistributeToGroup - [String] Comma delimited list of Distribution Point Groups to distribute the Content to -->
		<DistributeToGroup>All DPs except PXE</DistributeToGroup>
		<!-- DistributeToDPs - [String] Comma delimited list of Distribution Points to distribute the Content to -->
		<DistributeToDPs></DistributeToDPs>
	</Distribution>
	<!-- You can automatically supersede the previous version of the application (Note that the Previous version has to have the same name, publisher and deployment type names)-->>
	<Supersedence>
		<!-- Supersede this application automatically -->
		<Supersedence>[Boolean]</Supersedence>
		<!-- Uninstall previous version before installing the latest -->
		<Uninstall>[Boolean]</Uninstall>
		<!-- Cleanup superseded versions of this application -->
		<CleanupSuperseded>[Boolean]</CleanupSuperseded>
		<!-- Keep this many superseded versions of the application -->
		<KeepSuperseded>[int]</KeepSuperseded>
	</Supersedence>
	<!-- You can optionally deploy the application to one or more specified Collections here -->
	<Deployment>
		<!-- DeploySoftware - [Boolean] Switch for Software Deployment, Application should be distributed before deployment -->
		<DeploySoftware></DeploySoftware>
		<!-- UpdateSuperseded - [Boolean] Whether the deployment should automatically upgrade superseded versions -->
		<UpdateSuperseded></UpdateSuperseded>
		<!-- DeadlineOffset - [TimeSpan] Time after deployment that install will be enforced. Requires UpdateSuperseded = true for available deployments, eg 1.23:45 for 1 day, 23 hours, 45 minutes. https://docs.microsoft.com/en-us/dotnet/standard/base-types/standard-timespan-format-strings -->
		<DeadlineOffset></DeadlineOffset>
		<!-- AvailableOffset - [TimeSpan] Delay before deployment becomes available. See DeadlineOffset for details. -->
		<AvailableOffset></AvailableOffset>
		<!-- TimeBaseOn - Which time zone to use for the deployment -->
		<TimeBaseOn>[LocalTime/UTC]</TimeBaseOn>
		<!-- AllowRepair - [Boolean] Swtich for allowing users to repair applications from software center -->
		<AllowRepair></AllowRepair>
		<!-- DeploymentCollection - [String] Collection for the software to be deployed to -->
		<DeploymentCollection></DeploymentCollection>
	</Deployment>
</ApplicationDef>



<!-- LIST OF Available OSes for Requirements Rules
Windows/All_x64_Windows_10_higher
Windows/All_x86_Windows_10_higher
Windows/All_Team_Windows_10_higher
Windows/All_Holographic_Windows_10_higher
Windows/All_Holographic_Enterprise_Windows_10_higher
Windows/All_ARM64_Windows_10_higher
Windows/All_Windows_Client_Server
Windows/All_IA64_Windows_Server_2003_Non_R2
Windows/All_IA64_Windows_Server_2008
Windows/All_x64_Windows_Server_2016
Windows/All_x64_Windows_Server_2016_and_higher
Windows/All_x64_Windows_Server_2019_and_higher
Windows/All_x64_Windows_7_Client
Windows/All_x64_Windows_8_Client
Windows/All_x64_Windows_8_and_higher_Client
Windows/All_x64_Windows_8.1_Client
Windows/All_x64_Windows_8.1_and_higher_Clients
Windows/All_x64_Windows_8.1
Windows/All_x64_Windows_10_and_higher_Clients
Windows/All_x64_Windows_Server_2003_Non_R2
Windows/All_x64_Windows_Server_2003_R2
Windows/All_x64_Windows_Server_2008
Windows/All_x64_Windows_Server_2008_R2
Windows/All_x64_Windows_Server_8
Windows/All_x64_Windows_Server_8_and_higher
Windows/All_x64_Windows_Server_2012_R2
Windows/All_x64_Windows_Server_2012_R2_and_higher
Windows/All_Embedded_Windows_XP
Windows/x64_Embedded_Windows_7
Windows/x86_Embedded_Windows_7
Windows/All_x86_Windows_Embedded_8_Standard
Windows/All_x64_Windows_Embedded_8_Standard
Windows/All_x86_Windows_Embedded_8_Industry
Windows/All_x64_Windows_Embedded_8_Industry
Windows/All_x86_Windows_Embedded_8.1_Industry
Windows/All_x64_Windows_Embedded_8.1_Industry
Windows/All_x64_Windows_Vista
Windows/All_x64_Windows_XP_Professional
Windows/All_x86_Windows_7_Client
Windows/All_x86_Windows_8_Client
Windows/All_x86_Windows_8_and_higher_Client
Windows/All_x86_Windows_8.1_Client
Windows/All_x86_Windows_8.1_and_higher_Clients
Windows/All_x86_Windows_8.1
Windows/All_x86_Windows_10_and_higher_Clients
Windows/All_x86_Windows_Server_2003_Non_R2
Windows/All_x86_Windows_Server_2003_R2
Windows/All_x86_Windows_Server_2008
Windows/All_x86_Windows_Vista
Windows/All_x86_Windows_XP
Windows/All_ARM_Windows_8_Client
Windows/All_ARM_Windows_8.1_Client
Windows/All_ARM_Windows_8.1
Windows/All_Windows_RT
Windows/IA64_Windows_Server_2003_SP1
Windows/IA64_Windows_Server_2003_SP2
Windows/IA64_Windows_Server_2008_original_release
Windows/x64_Windows_Server_2003_R2_original_release_SP1
Windows/x64_Windows_Server_2003_R2_SP2
Windows/x64_Windows_Server_2003_SP1
Windows/x64_Windows_Server_2003_SP2
Windows/x64_Windows_Server_2008_original_release
Windows/x64_Windows_Vista_Original_Release
Windows/x64_Windows_Vista_SP1
Windows/x64_Windows_XP_Professional_SP1
Windows/x64_Windows_XP_Professional_SP2
Windows/x86_Windows_Server_2003_R2_original_release_SP1
Windows/x86_Windows_Server_2003_R2_SP2
Windows/x86_Windows_Server_2003_SP1
Windows/x86_Windows_Server_2003_SP2
Windows/x86_Windows_Server_2008_original_release
Windows/x86_Windows_Vista_Original_Release
Windows/x86_Windows_Vista_SP1
Windows/x86_Windows_XP_Professional_Service_Pack_2
Windows/x86_Windows_XP_Professional_Service_Pack_3
Windows/x86_Windows_7_Client
Windows/x64_Windows_7_Client
Windows/x86_Windows_7_SP1
Windows/x64_Windows_7_SP1
Windows/x64_Windows_Server_2008_R2
Windows/x86_Windows_Vista_SP2
Windows/x64_Windows_Vista_SP2
Windows/x64_Windows_Server_2008_SP2
Windows/x86_Windows_Server_2008_SP2
Windows/IA64_Windows_Server_2008_SP2
Windows/x64_Windows_Server_2008_R2_Core
Windows/x64_Windows_Server_2008_R2_SP1
Windows/x64_Windows_Server_2008_Core
Windows/x86_Windows_Server_2008_Core
Windows/All_x86_Windows_2000
Windows/x86_Windows_2000_SP4
Windows/x64_Windows_Server_2008_R2_SP1_Core
Windows/x64_Windows_Server_2008_SP2_Core
-->
